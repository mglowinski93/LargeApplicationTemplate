name: Run backend code checks

on:
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: "development"
      POSTGRES_DB_HOST: "localhost"
      POSTGRES_DB_PORT: 5432
      POSTGRES_DB_NAME: "large_application_template"
      POSTGRES_DB_USER: "large_application_template_user"
      POSTGRES_DB_PASSWORD: "large_application_template_password"

    services:
      db:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: "large_application_template"
          POSTGRES_USER: "large_application_template_user"
          POSTGRES_PASSWORD: "large_application_template_password"

    steps:
      - uses: actions/checkout@v3

      - name: Cache python dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-python
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install python dependencies
        run: pip install -r backend/requirements/development.txt

      - name: Prepare database
        run: alembic upgrade head
        working-directory: backend/migrations/

      - name: Run tests
        run: pytest
        working-directory: backend

      - name: Run black
        run: black . --check
        working-directory: backend

      - name: Lint code
        run: find . -name '*.py' | grep -v alembic | xargs ruff
        working-directory: backend

      - name: Run mypy
        run: find . -name '*.py' | grep -v alembic | xargs mypy
        working-directory: backend
